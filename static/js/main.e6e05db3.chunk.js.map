{"version":3,"sources":["assets/default.jpg","assets/chat-dos-guri-native.png","assets/react-ts.png","assets/scalatra-test.png","styles/theme/constants.ts","styles/theme/provider.tsx","styles/Container/index.tsx","styles/SideBar/SideBar.ts","styles/Title/index.tsx","service/github.api.ts","styles/SideBar/index.tsx","styles/Content/index.tsx","styles/Page/index.tsx","styles/theme/Template.tsx","assets/index.ts","styles/Card/index.tsx","styles/Row/index.tsx","pages/Home/index.tsx","routes/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","theme","font","dark","light","bg","constants","GlobalStyle","createGlobalStyle","props","darkThemeOn","Provider","useState","darkTheme","setDarkTheme","useEffect","window","matchMedia","matches","addEventListener","e","children","Container","styled","section","SideBarContainer","div","Description","attrs","className","Title","h2","prop","Subtitle","h4","getRepos","a","fetch","res","json","data","filter","i","language","loadReadme","text","SideBar","readme","setReadme","then","catch","console","error","src","height","alt","href","target","source","Content","PageContent","Template","require","Card","CardBody","Badge","span","lang","CardImage","img","Button","CardProject","assets","file","setFile","keys","Object","undefined","find","title","style","maxWidth","description","Row","Home","cards","setCards","myCards","map","card","toLowerCase","trim","name","html_url","id","key","Routes","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","App","StrictMode","ReactDOM","render","document","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e6e05db3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.0953bcf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chat-dos-guri-native.65557d33.png\";","module.exports = __webpack_public_path__ + \"static/media/react-ts.2afee9b9.png\";","module.exports = __webpack_public_path__ + \"static/media/scalatra-test.499d6178.png\";","export default {\n\tcolors: {\n\t\t'javascript': '#efda4d',\n\t\t'scala': '#de3423',\n\t\t'ruby': '#731a16',\n\t\t'typescript': '#3572A5',\n\t\t'java': '#f8981d'\n\t},\n\ttheme: {\n\t\tfont: { dark: '#fff', light: '#000' },\n\t\tbg: { dark: '#2a2b2b', light: '#f8f9fa' }\n\t}\n};\n","import React, { useState, useEffect } from 'react';\nimport {ThemeProvider, createGlobalStyle} from 'styled-components';\nimport constants from 'styles/theme/constants';\nimport { Base } from 'types/props';\n\nconst {bg, font} = constants.theme;\n\nconst GlobalStyle = createGlobalStyle<{darkThemeOn: boolean}>`\n    .bg-darker {\n        background-color: ${props => props.darkThemeOn ? bg.dark : 'white'};\n    }\n    p {\n        color: ${props => props.darkThemeOn ? font.dark : font.light};\n    }\n    span {\n        color: ${props => props.darkThemeOn ? font.dark : font.light};\n    }\n`;\n\nexport const Provider: React.FC<Base> = (props) => {\n\n\tconst [darkTheme, setDarkTheme] = useState(false);\n\n\tuseEffect(() => {\n\t\tif(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n\t\t\tsetDarkTheme(true);\n\t\t}\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n\t\t\tif(e.matches) {\n\t\t\t\tsetDarkTheme(true);\n\t\t\t} else {\n\t\t\t\tsetDarkTheme(false);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={{...constants, darkThemeOn: darkTheme}}>\n\t\t\t\t{props?.children}\n\t\t\t\t<GlobalStyle darkThemeOn={darkTheme} />\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: row;\n    @media only screen and (max-width: 1180px) {\n        flex-direction: column;\n    }\n`;\n","import styled from 'styled-components';\nimport {ThemeProps} from 'types/theme';\n\nexport const SideBarContainer = styled.div<ThemeProps>`\n    background-color: ${props => props.theme.darkThemeOn ? '#343a40' : props.theme.theme.bg.light};\n    width: 30vw;\n    @media only screen and (max-width: 1180px) {\n        width: 100%;\n        min-height: fit-content;\n    }\n    min-height: 100vh;\n    /* should be 1180px its max */\n`;\n\nexport const Description = styled.div.attrs({\n\tclassName:'card card-body'\n})<ThemeProps>`\n    background-color: ${props => props.theme.darkThemeOn ? props.theme.theme.bg.dark : '#fff'};\n`;\n","import styled from 'styled-components';\nimport { ThemeProps } from 'types/theme';\n\nexport const Title = styled.h2<ThemeProps>`\n    color: ${prop => prop.theme.darkThemeOn ? prop.theme.theme.font.dark : prop.theme.theme.font.light };\n`;\n\nexport const Subtitle = styled.h4<ThemeProps>`\n    color: ${prop => prop.theme.darkThemeOn ? prop.theme.theme.font.dark : prop.theme.theme.font.light };\n`;\n","import { TCardGit } from \"types/cards\";\n\nexport const getRepos = async (): Promise<TCardGit[]> => {\n    const url = \"https://api.github.com/users/githiago-f/repos?visibility=public\"\n    const res = await fetch(url);\n    const data = await res.json();\n    return data.filter((i: TCardGit) => i.language !== null);\n}\n\nexport const loadReadme = async () => {\n    const url = \"https://raw.githubusercontent.com/githiago-f/githiago-f/master/README.md\"\n    const res = await fetch(url);\n    const data = await res.text();\n    return data;\n}\n","import React, {useEffect, useState} from 'react';\nimport { SideBarContainer, Description } from './SideBar';\nimport {Subtitle} from './../Title';\nimport { loadReadme } from 'service/github.api';\nimport ReactMarkdown from 'react-markdown';\n\nexport const SideBar = () => {\n\tconst [readme, setReadme] = useState('');\n\n\tuseEffect(()=> {\n\t\tloadReadme().then(setReadme).catch(console.error);\n\t}, []);\n\n\treturn (\n\t\t<SideBarContainer>\n\t\t\t<div className=\"pt-5 p-2 text-center\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://github.com/githiago-f.png\"\n\t\t\t\t\theight=\"120\"\n\t\t\t\t\talt=\"profile pic\"\n\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"py-3\">\n\t\t\t\t\t<div className=\"py-3\">\n\t\t\t\t\t\t<Subtitle>Thiago Farias</Subtitle>\n\t\t\t\t\t\t<a href=\"https://github.com/githiago-f\" target=\"_blanck\">@githiago-f</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<Description>\n\t\t\t\t\t<p className=\"text-left\">\n\t\t\t\t\t\t<ReactMarkdown source={readme}/>\n\t\t\t\t\t</p>\n\t\t\t\t</Description>\n\t\t\t</div>\n\t\t</SideBarContainer>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const Content = styled.div.attrs({\n\tclassName: 'bg-darker'\n})`\n    padding-top: 3rem;\n    min-height: 100vh;\n    @media only screen and (min-width: 1180px) {\n        max-height: 100vh;\n    }\n    @media only screen and (max-width: 1180px) {\n        width: 100%;\n    }\n    padding-bottom: 3rem;\n    position: relative;\n    overflow: auto;\n    width: 70vw;\n`;\n","import styled from 'styled-components';\n\nexport const PageContent = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n`;\n","import React from 'react';\nimport { Base } from 'types/props';\nimport { Container } from 'styles/Container';\nimport { SideBar } from 'styles/SideBar';\nimport { Content } from 'styles/Content';\nimport { PageContent } from 'styles/Page';\n\nexport const Template: React.FC<Base> = (props) => {\n\treturn(\n\t\t<Container>\n\t\t\t<SideBar/>\n\t\t\t<Content>\n\t\t\t\t<PageContent>\n\t\t\t\t\t{props?.children}\n\t\t\t\t</PageContent>\n\t\t\t</Content>\n\t\t</Container>\n\t);\n};\n","export default {\n    \"default\": require('./default.jpg'),\n    \"chat-dos-guri-native\": require('./chat-dos-guri-native.png'),\n    \"react-ts\": require('./react-ts.png'),\n    \"scalatra-test\": require('./scalatra-test.png')\n} as any\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport assets from 'assets';\nimport { Base } from 'types/props';\nimport { TCard } from 'types/cards';\nimport { ThemeProps } from 'types/theme';\nimport { Subtitle } from 'styles/Title';\n\nconst Card = styled.div<ThemeProps>`\n    border: 1px solid rgba(0,0,0,.125);\n    border-radius: 4px;\n    padding: 10px;\n    margin-bottom: 5px;\n    background-color: ${props => props.theme.darkThemeOn ? '#343a40' : props.theme.theme.bg.light};\n`;\n\nconst CardBody = styled.div`\n    padding: 10px;\n`;\n\nconst Badge = styled.span.attrs({\n\tclassName: 'badge badge-pill'\n})<ThemeProps & {lang: string}>`\n    background-color: ${props => props.theme.colors[props.lang]};\n    font-size: 50%;\n`;\n\nconst CardImage = styled.img`\n    border-radius: 4px;\n    max-height: 267px;\n    max-width: 400;\n`;\n\nconst Button = styled.a.attrs({\n\tclassName: 'btn btn-dark',\n\ttarget: '_blank'\n})`\n    float: right;\n`;\n\nexport const CardProject = (props: Base<TCard>) => {\n\tconst [file, setFile] = useState(assets['default']);\n\n\tuseEffect(()=> {\n\t\tconst keys = Object.keys(assets);\n\t\tif(keys) {\n\t\t\tif(keys.find(i => i === props.title) !== undefined) {\n\t\t\t\tsetFile(assets[props.title]);\n\t\t\t}\n\t\t}\n\t}, [props.title]);\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardImage className=\"img-fluid\" src={file} alt={props.title + ' - ' + props.lang}/>\n\t\t\t<CardBody>\n\t\t\t\t<Subtitle>{props.title}</Subtitle>\n\t\t\t\t<p style={{maxWidth: 380 }}>\n\t\t\t\t\t{props.description}\n\t\t\t\t</p>\n\t\t\t\t<span>\n\t\t\t\t\t<Badge lang={props.lang}>&nbsp;</Badge>\n                    &nbsp;{props.lang}\n\t\t\t\t</span>\n\t\t\t\t<Button href={props.href}> Ver projeto </Button>\n\t\t\t</CardBody>\n\t\t</Card>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const Row = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: flex-start;\n`;\n","import React, { useState, useEffect, FC } from 'react';\nimport { Template } from 'styles/theme/Template';\nimport { Title } from 'styles/Title';\nimport { CardProject } from 'styles/Card';\nimport { Row } from 'styles/Row';\nimport { TCard } from 'types/cards';\nimport { getRepos } from 'service/github.api';\nimport { Base } from 'types/props';\nimport { Description } from 'styles/SideBar/SideBar';\n\nexport const Home: FC<Base<{}>> = () => {\n\tconst [cards, setCards] = useState([] as TCard[]);\n\n\tuseEffect(() => {\n\t\tgetRepos().then(data => {\n\t\t\tconst myCards = data.map(card => ({\n                        lang: card.language.toLowerCase().trim(),\n                        description: card.description,\n                        title: card.name,\n                        href: card.html_url\n                    })\n                ) as TCard[];\n\t\t\tsetCards(myCards);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Template>\n\t\t\t<Title>Meus projetos</Title>\n\t\t\t<Row>\n                {cards.map((i, id)=> <CardProject key={id} {...i} />)}\n\t\t\t</Row>\n\t\t\t<Description>\n\t\t\t\t<p>\n                    Icons made by{' '}\n\t\t\t\t\t<a href=\"https://creativemarket.com/Becris\" title=\"Becris\">Becris</a>{' '}\n                    from{' '}\n\t\t\t\t\t<a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n\t\t\t\t</p>\n\t\t\t</Description>\n\t\t</Template>\n\t);\n};\n","import React from 'react';\nimport { Provider } from 'styles/theme/provider';\nimport { Home } from 'pages';\n\nexport const Routes = () => {\n\treturn (\n\t\t<Provider>\n\t\t\t<Home/>\n\t\t</Provider>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\tprocess.env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Routes} from 'routes/index';\nimport * as serviceWorker from './serviceWorker';\n\nconst App = () => (\n\t<React.StrictMode>\n\t\t<Routes />\n\t</React.StrictMode>\n);\n\nReactDOM.render(\n\t<App/>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}