{"version":3,"sources":["assets/default.jpg","assets/chat-dos-guri-native.png","assets/react-ts.png","assets/scalatra-test.png","styles/theme/constants.ts","styles/theme/provider.tsx","styles/Container/index.tsx","styles/SideBar/SideBar.ts","styles/SideBar/index.tsx","styles/Content/index.tsx","styles/Page/index.tsx","styles/theme/Template.tsx","styles/Title/index.tsx","assets/index.ts","styles/Card/index.tsx","styles/Row/index.tsx","service/github.api.ts","pages/Home/index.tsx","routes/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","primaryColor","secondaryColor","Provider","props","theme","constants","children","Container","styled","section","SideBarContainer","div","attrs","className","SideBar","src","height","alt","href","target","role","aria-expanded","aria-controls","data-toggle","id","Content","PageContent","Template","Title","h2","require","Card","CardBody","Badge","span","lang","CardImage","img","Button","a","CardProject","useState","assets","file","setFile","useEffect","keys","Object","undefined","find","i","title","width","style","maxWidth","description","Row","getRepos","fetch","res","json","data","Home","cards","setCards","then","myCards","map","card","language","toLowerCase","trim","name","html_url","key","Routes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","StrictMode","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b217c780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.0953bcf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chat-dos-guri-native.7cf72ddd.png\";","module.exports = __webpack_public_path__ + \"static/media/react-ts.9157bab9.png\";","module.exports = __webpack_public_path__ + \"static/media/scalatra-test.f42b3422.png\";","export default {\n\tcolors: {\n\t\tprimaryColor: '#4a80b0',\n        secondaryColor: '#45617a',\n        'javascript': '#efda4d',\n        'scala': '#de3423',\n        'ruby': '#731a16',\n        'typescript': '#3572A5',\n        'java': '#f8981d'\n\t}\n};\n","import React from 'react';\nimport {ThemeProvider} from 'styled-components';\nimport constants from './constants';\nimport { Base } from 'types/props';\n\nexport const Provider: React.FC<Base> = (props) => {\n\treturn (\n\t\t<ThemeProvider theme={constants}>\n\t\t\t{props?.children}\n\t\t</ThemeProvider>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`padding-left: 15px;padding-right: 15px;`;\n","import styled from 'styled-components';\n\nexport const SideBarContainer = styled.div.attrs({\n\tclassName: 'col-12 col-sm-12 col-md-3 col-lg-3 text-center'\n})`\n    height: fit-content;\n`;\n","import React from 'react';\nimport { SideBarContainer } from './SideBar';\n\nexport const SideBar = () => {\n\treturn (\n\t\t<SideBarContainer>\n\t\t\t<div className=\"pt-5 p-2\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://github.com/githiago-f.png\"\n\t\t\t\t\theight=\"120\"\n\t\t\t\t\talt=\"profile pic\"\n\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"py-3\">\n\t\t\t\t\t<div className=\"py-3\">\n                        <h4>Thiago Farias</h4>\n\t\t\t\t\t\t<a href=\"https://github.com/githiago-f\" target=\"_blanck\">@githiago-f</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"btn btn-outline-dark w-100\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\t\taria-controls=\"multiCollapseExample1\"\n\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\thref=\"#description\"\n\t\t\t\t\t>Description</a>\n\t\t\t\t\t<div className=\"collapse multi-collapse p-2\" id=\"description\">\n\t\t\t\t\t\t<div className=\"card card-body\">\n\t\t\t\t\t\t\t<p className=\"text-left\">\n                                Olá, este é meu portifólio.<br/>\n                                Sou um desenvolvedor full-stack com{\" \"}\n                                vasto conhecimento em desenvolvimento{\" \"}\n                                web com Html, Bootstrap, CSS,{\" \"}\n                                JavaScript e ReactJS.{\" \"}\n                                Também em desenvolvimento de serviços back-end{\" \"}\n                                com Express.js, Laravel, Adonis.js, entre outros.<br/>\n                                Desenvolvi também aplicações mobile utilizando{\" \"}\n                                React-Native.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</SideBarContainer>\n\t);\n};\n","import styled from 'styled-components'\n\nexport const Content = styled.div.attrs({\n    className: \"col-12 col-sm-12 col-md-9 col-lg-9 bg-light\"\n})`\n    padding-top: 3rem;\n    min-height: 100vh;\n    padding-bottom: 3rem;\n    max-height: 100vh;\n    position: relative;\n    overflow: auto;\n`;\n","import styled from 'styled-components'\n\nexport const PageContent = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n`;\n","import React from 'react';\nimport { Base } from 'types/props';\nimport { Container } from 'styles/Container';\nimport { SideBar } from 'styles/SideBar';\nimport { Content } from 'styles/Content';\nimport { PageContent } from 'styles/Page';\n\nexport const Template: React.FC<Base> = (props) => {\n\treturn(\n\t\t<Container>\n            <div className=\"row\">\n                <SideBar/>\n                <Content>\n                    <PageContent>\n                        {props?.children}\n                    </PageContent>\n                </Content>\n            </div>\n\t\t</Container>\n\t);\n};\n","import styled from 'styled-components';\nimport { ThemeProps } from 'types/theme';\n\nexport const Title = styled.h2<ThemeProps>`\n\n`;\n","export default {\n    \"default\": require('./default.jpg'),\n    \"chat-dos-guri-native\": require('./chat-dos-guri-native.png'),\n    \"react-ts\": require('./react-ts.png'),\n    \"scalatra-test\": require('./scalatra-test.png')\n} as any\n","import React, { FC, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport assets from 'assets';\nimport { Base } from 'types/props';\nimport { TCard } from 'types/cards';\nimport { ThemeProps } from 'types/theme';\n\nconst Card = styled.div`\n    border: 1px solid rgba(0,0,0,.125);\n    border-radius: 4px;\n    padding: 10px;\n    margin-bottom: 5px;\n    background-color: #fff;\n`;\n\nconst CardBody = styled.div`\n    padding: 10px;\n`;\n\nconst Badge = styled.span.attrs({\n    className: \"badge badge-pill\"\n})<ThemeProps & {lang: string;}>`\n    background-color: ${props => props.theme.colors[props.lang]};\n    font-size: 50%;\n`;\n\nconst CardImage = styled.img`\n    border-radius: 4px;\n    max-height: 267px;\n    max-width: 400;\n`;\n\nconst Button = styled.a.attrs({\n    className: 'btn btn-dark',\n    target: '_blank'\n})`\n    float: right;\n`\n\nexport const CardProject: FC<Base<TCard>> = (props) => {\n    const [file, setFile] = useState(assets[\"default\"]);\n\n    useEffect(()=> {\n        const keys = Object.keys(assets);\n        if(keys) {\n            if(keys.find(i => i === props.title) !== undefined) {\n                setFile(assets[props.title])\n            }\n        }\n    }, [props.title])\n\n\treturn (\n\t\t<Card>\n            <CardImage height=\"267\" width=\"400\" src={file}/>\n            <CardBody>\n                <h4>{props.title}</h4>\n                <p style={{maxWidth: 380 }}>\n                    {props.description}\n                </p>\n                <span>\n                    <Badge lang={props.lang}>&nbsp;</Badge>\n                    &nbsp;{props.lang}\n                </span>\n                <Button href={props.href}> Ver projeto </Button>\n            </CardBody>\n        </Card>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const Row = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: flex-start;\n`\n","import { TCardGit } from \"types/cards\";\n\nexport const getRepos = async (): Promise<TCardGit[]> => {\n    const url = \"https://api.github.com/users/githiago-f/repos?visibility=public\"\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n}\n","import React, { useState, useEffect, FC } from 'react';\nimport { Template } from 'styles/theme/Template';\nimport { Title } from 'styles/Title';\nimport { CardProject } from 'styles/Card';\nimport { Row } from 'styles/Row';\nimport { TCard } from 'types/cards';\nimport { getRepos } from 'service/github.api';\nimport { Base } from 'types/props';\n\nexport const Home: FC<Base<{}>> = () => {\n    const [cards, setCards] = useState([] as TCard[])\n\n    useEffect(() => {\n        getRepos().then(data => {\n            const myCards = data.map(card => ({\n                lang: card.language.toLowerCase().trim(),\n                description: card.description,\n                title: card.name,\n                href: card.html_url\n            }));\n            setCards(myCards)\n        });\n    }, []);\n\n\treturn (\n\t\t<Template>\n\t\t\t<Title>Meus projetos</Title>\n            <Row>\n                {cards.map((i, id)=> <CardProject key={id} {...i} />)}\n            </Row>\n            <div className='card card-body'>\n            Icons made by\n            <a href=\"https://creativemarket.com/Becris\" title=\"Becris\">Becris</a>\n            from\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n            </div>\n\t\t</Template>\n\t);\n};\n","import React from 'react';\nimport { Provider } from 'styles/theme/provider';\nimport { Home } from 'pages';\n\nexport const Routes = () => {\n\treturn (\n\t\t<Provider>\n            <Home/>\n\t\t</Provider>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Routes} from 'routes/index';\nimport * as serviceWorker from './serviceWorker';\n\nconst App = () => (\n\t<React.StrictMode>\n\t\t<Routes />\n\t</React.StrictMode>\n);\n\nReactDOM.render(\n\t<App/>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}