{"version":3,"sources":["styles/theme/constants.ts","styles/theme/provider.tsx","styles/Container/index.tsx","styles/SideBar/SideBar.ts","styles/Title/index.tsx","service/github.api.ts","styles/SideBar/index.tsx","styles/SideBar/hooks.ts","styles/Content/index.tsx","styles/Page/index.tsx","styles/theme/Template.tsx","assets/index.ts","styles/Card/index.tsx","styles/Row/index.tsx","pages/Home/index.tsx","pages/Home/hooks.ts","routes/index.tsx","serviceWorker.ts","index.tsx","assets/default.jpg","assets/chat-dos-guri-native.png","assets/react-ts.png","assets/scalatra-test.png"],"names":["colors","theme","font","dark","light","bg","constants","GlobalStyle","createGlobalStyle","props","darkThemeOn","Provider","useState","darkTheme","setDarkTheme","useEffect","window","matchMedia","matches","addEventListener","e","children","Container","styled","section","SideBarContainer","div","Description","attrs","className","Title","h2","prop","Subtitle","h4","getAuthor","a","pack","author","getRepos","userName","url","name","fetch","res","json","data","filter","i","language","loadReadme","text","SideBar","profileLink","setProfileLink","setUserName","then","useSideBarHooks","src","height","alt","href","target","Content","PageContent","Template","require","Card","CardBody","Badge","span","lang","CardImage","img","Button","CardProject","assets","file","setFile","keys","Object","undefined","find","title","style","maxWidth","description","Row","Home","cards","setCards","markdown","setMarkdown","myCards","map","card","toLowerCase","trim","html_url","useHomeHooks","source","id","key","Routes","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","StrictMode","ReactDOM","render","document","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.db151b91.chunk.js","sourcesContent":["export default {\n    colors: {\n        'javascript': '#efda4d',\n        'scala': '#de3423',\n        'ruby': '#731a16',\n        'typescript': '#3572A5',\n        'java': '#f8981d'\n    },\n    theme: {\n        font: { dark: '#fff', light: '#000' },\n        bg: { dark: '#2a2b2b', light: '#f8f9fa' }\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport {ThemeProvider, createGlobalStyle} from 'styled-components';\nimport constants from 'styles/theme/constants';\nimport { Base } from 'types/props';\n\nconst {bg, font} = constants.theme;\n\nconst GlobalStyle = createGlobalStyle<{darkThemeOn: boolean}>`\n    .bg-darker {\n        background-color: ${props => props.darkThemeOn ? bg.dark : 'white'};\n    }\n    p, li, span, h3, h4, h2 {\n        color: ${props => props.darkThemeOn ? font.dark : font.light};\n    }\n    img[alt=\"BANNER\"] {\n        width: 100%;\n        height: auto;\n    }\n`;\n\nexport const Provider: React.FC<Base> = (props) => {\n\n    const [darkTheme, setDarkTheme] = useState(false);\n\n    useEffect(() => {\n        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            setDarkTheme(true);\n        }\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n            if(e.matches) {\n                setDarkTheme(true);\n            } else {\n                setDarkTheme(false);\n            }\n        });\n    }, []);\n\n    return (\n        <>\n            <ThemeProvider theme={{...constants, darkThemeOn: darkTheme}}>\n                {props?.children}\n                <GlobalStyle darkThemeOn={darkTheme} />\n            </ThemeProvider>\n        </>\n    );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: row;\n    @media only screen and (max-width: 1180px) {\n        flex-direction: column;\n    }\n`;\n","import styled from 'styled-components';\nimport {ThemeProps} from 'types/theme';\n\nexport const SideBarContainer = styled.div<ThemeProps>`\n    background-color: ${props => props.theme.darkThemeOn ? '#343a40' : props.theme.theme.bg.light};\n    width: 25vw;\n    @media only screen and (max-width: 1180px) {\n        width: 100%;\n        min-height: fit-content;\n    }\n    min-height: 100vh;\n    max-height: 100vh;\n    /* should be 1180px its max */\n`;\n\nexport const Description = styled.div.attrs({\n    className: 'card card-body'\n})<ThemeProps>`\n    background-color: ${props => props.theme.darkThemeOn ? '#343a40' : '#fff'};\n    overflow-y: auto;\n`;\n","import styled from 'styled-components';\nimport { ThemeProps } from 'types/theme';\n\nexport const Title = styled.h2<ThemeProps>`\n    color: ${prop => prop.theme.darkThemeOn ? prop.theme.theme.font.dark : prop.theme.theme.font.light };\n`;\n\nexport const Subtitle = styled.h4<ThemeProps>`\n    color: ${prop => prop.theme.darkThemeOn ? prop.theme.theme.font.dark : prop.theme.theme.font.light };\n`;\n","import { TCardGit } from 'types/cards';\n\nexport const getAuthor = async () => {\n    const pack = await import('./../../package.json');\n    return pack.author\n}\n\nexport const getRepos = async (): Promise<TCardGit[]> => {\n    const userName = await getAuthor();\n    const url = `https://api.github.com/users/${userName.name}/repos?visibility=public`;\n    const res = await fetch(url);\n    const data = await res.json();\n    return data.filter((i: TCardGit) => i.language !== null);\n};\n\nexport const loadReadme = async () => {\n    const userName = await getAuthor();\n    const url = `https://raw.githubusercontent.com/${userName.name}/githiago-f/master/README.md`;\n    const res = await fetch(url);\n    const data = await res.text();\n    return data;\n};\n","import React from 'react';\nimport { SideBarContainer } from './SideBar';\nimport {Subtitle} from './../Title';\nimport { useSideBarHooks } from './hooks';\n\nexport const SideBar = () => {\n    const { profileLink, userName } = useSideBarHooks();\n\n    return (\n        <SideBarContainer>\n            <div className=\"pt-5 p-2 text-center\">\n                <img\n                    src={`https://github.com/${userName}.png`}\n                    height=\"120\"\n                    alt=\"profile pic\"\n                    className=\"rounded-circle\"\n                />\n                <div className=\"py-3\">\n                    <div className=\"py-3\">\n                        <Subtitle>Thiago Farias</Subtitle>\n                        <a href={profileLink} target=\"_blanck\">@githiago-f</a>\n                    </div>\n\n                </div>\n            </div>\n        </SideBarContainer>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { getAuthor } from \"service/github.api\";\n\nexport const useSideBarHooks = () => {\n    const [profileLink, setProfileLink] = useState('');\n    const [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        getAuthor().then(author => {\n            setProfileLink(author.url);\n            setUserName(author.name);\n        });\n    }, []);\n\n    return {\n        profileLink,\n        userName\n    }\n}\n","import styled from 'styled-components';\n\nexport const Content = styled.div.attrs({\n    className: 'bg-darker'\n})`\n    padding-top: 3rem;\n    min-height: 100vh;\n    @media only screen and (min-width: 1180px) {\n        max-height: 100vh;\n    }\n    @media only screen and (max-width: 1180px) {\n        width: 100%;\n    }\n    padding-bottom: 3rem;\n    position: relative;\n    overflow: auto;\n    width: 75vw;\n`;\n","import styled from 'styled-components';\n\nexport const PageContent = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n`;\n","import React from 'react';\nimport { Base } from 'types/props';\nimport { Container } from 'styles/Container';\nimport { SideBar } from 'styles/SideBar';\nimport { Content } from 'styles/Content';\nimport { PageContent } from 'styles/Page';\n\nexport const Template: React.FC<Base> = (props) => {\n    return(\n        <Container>\n            <SideBar/>\n            <Content>\n                <PageContent>\n                    {props?.children}\n                </PageContent>\n            </Content>\n        </Container>\n    );\n};\n","export default {\n    'default': require('./default.jpg'),\n    'chat-dos-guri-native': require('./chat-dos-guri-native.png'),\n    'react-ts': require('./react-ts.png'),\n    'scalatra-test': require('./scalatra-test.png')\n} as {[key: string]: any};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport assets from 'assets';\nimport { Base } from 'types/props';\nimport { TCard } from 'types/cards';\nimport { ThemeProps } from 'types/theme';\nimport { Subtitle } from 'styles/Title';\n\nconst Card = styled.div<ThemeProps>`\n    border: 1px solid rgba(0,0,0,.125);\n    border-radius: 4px;\n    padding: 10px;\n    margin-bottom: 5px;\n    background-color: ${props => props.theme.darkThemeOn ? '#343a40' : props.theme.theme.bg.light};\n`;\n\nconst CardBody = styled.div`\n    padding: 10px;\n`;\n\nconst Badge = styled.span.attrs({\n    className: 'badge badge-pill'\n})<ThemeProps & {lang: string}>`\n    background-color: ${props => props.theme.colors[props.lang]};\n    font-size: 50%;\n`;\n\nconst CardImage = styled.img`\n    border-radius: 4px;\n    max-height: 267px;\n    max-width: 400;\n`;\n\nconst Button = styled.a.attrs({\n    className: 'btn btn-dark',\n    target: '_blank'\n})`\n    float: right;\n`;\n\nexport const CardProject = (props: Base<TCard>) => {\n    const [file, setFile] = useState(assets['default']);\n\n    useEffect(()=> {\n        const keys = Object.keys(assets);\n        if(keys) {\n            if(keys.find(i => i === props.title) !== undefined) {\n                setFile(assets[props.title]);\n            }\n        }\n    }, [props.title]);\n\n    return (\n        <Card>\n            <CardImage className=\"img-fluid\" src={file} alt={props.title + ' - ' + props.lang}/>\n            <CardBody>\n                <Subtitle>{props.title}</Subtitle>\n                <p style={{maxWidth: 380 }}>\n                    {props.description}\n                </p>\n                <span>\n                    <Badge lang={props.lang}>&nbsp;</Badge>\n                    &nbsp;{props.lang}\n                </span>\n                <Button href={props.href}> Ver projeto </Button>\n            </CardBody>\n        </Card>\n    );\n};\n","import styled from 'styled-components';\n\nexport const Row = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: flex-start;\n`;\n","import React from 'react';\nimport { Template } from 'styles/theme/Template';\nimport { Title } from 'styles/Title';\nimport { CardProject } from 'styles/Card';\nimport { Row } from 'styles/Row';\nimport { Description } from 'styles/SideBar/SideBar';\nimport { useHomeHooks } from './hooks';\nimport ReactMarkdown from 'react-markdown';\n\nexport const Home = () => {\n    const { cards, markdown } = useHomeHooks();\n\n    return (\n        <Template>\n            <Description>\n                <ReactMarkdown source={markdown}/>\n            </Description>\n            <div className=\"py-5\">\n                <Title>Meus projetos</Title>\n            </div>\n            <Row>\n                {cards.map((i, id)=> <CardProject key={id} {...i} />)}\n            </Row>\n            <Description>\n                <p>\n                    Icons made by{' '}\n                    <a href=\"https://creativemarket.com/Becris\" title=\"Becris\">Becris</a>{' '}\n                    from{' '}\n                    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n                </p>\n            </Description>\n        </Template>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { TCard } from \"types/cards\";\nimport { getRepos, loadReadme } from \"service/github.api\";\n\nexport const useHomeHooks = () => {\n    const [cards, setCards] = useState([] as TCard[]);\n    const [markdown, setMarkdown] = useState('');\n\n    useEffect(() => {\n        getRepos().then(data => {\n            const myCards = data.map(card => ({\n                lang: card.language.toLowerCase().trim(),\n                description: card.description,\n                title: card.name,\n                href: card.html_url\n            })\n            ) as TCard[];\n            setCards(myCards);\n        });\n\n        loadReadme().then(setMarkdown);\n    }, []);\n\n    return {\n        cards,\n        markdown\n    }\n}\n","import React from 'react';\nimport { Provider } from 'styles/theme/provider';\nimport { Home } from 'pages';\n\nexport const Routes = () => {\n    return (\n        <Provider>\n            <Home/>\n        </Provider>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Routes} from 'routes/index';\nimport * as serviceWorker from './serviceWorker';\n\nconst App = () => (\n    <React.StrictMode>\n        <Routes />\n    </React.StrictMode>\n);\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/default.0953bcf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chat-dos-guri-native.65557d33.png\";","module.exports = __webpack_public_path__ + \"static/media/react-ts.2afee9b9.png\";","module.exports = __webpack_public_path__ + \"static/media/scalatra-test.499d6178.png\";"],"sourceRoot":""}